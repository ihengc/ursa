游戏数据管理的设计。

概述

        通常数据的变动直接反应到磁盘上，但是在并发过多时，会对数据库造成很大的压力。
    同时I/O操作会带来不必要的延迟。
         持久化层，如何减少持久化层压力？如如何减少持久化操作？

         缓存层，增加缓存层也会带来新的问题，如何减少内存的消耗？
         或者说内存在何种行为时增加或较少？

         随着玩家的登录，游戏内资源的增加（比如新资源的获取）内存消耗会逐渐增加。
         可以在玩家离线时，释放内存。可以只释放一部分内存，保留一部分内存。因为
         有些玩家可能只是短暂的离线，释放全部内存，在玩家登录时持久层的压力会比较
         大。

        按照上述情形，内存还是会一直增长。可以将离线玩家未被释放的内存，按时间顺序
        进行排序，之后按某种策略释放掉（如何今日的任务或活动完成情况）或者活跃度，
        需要按照游戏功能进行对玩家再次登录进行评估。或者缓存量达到某个节点后自动释放。

         1.将数据分类，公共数据只保留一份
         2.

登录验证模块如何实现?


公告模块如何实现?

邮件模块如何实现?

排名模块如何实现？

签到模块如何实现？

好友模块如何实现？
    1.添加/删除好友
    2.查看好友信息


关于数据库索引实现。